@inherits BootstrapComponentBase

<CascadingValue Name="@TabContainerParameterName" Value="this">
@if(Panes != null)
{
    <TabContent>
        @Panes
    </TabContent>
}
</CascadingValue>

@code {
    public const string TabContainerParameterName = nameof(TabContainer);

    private Dictionary<string, TabPane> _tabPanes = new();

    [Parameter]
    public RenderFragment Tabs { get; set; }

    [Parameter]
    public RenderFragment Content { get; set; }

    [Parameter]
    public RenderFragment Panes { get; set; }

    [Parameter]
    public bool Animated { get; set; }

    [Parameter]
    public string ActiveTabId { get; set; }

    [Parameter]
    public EventCallback<string> ActiveTabIdChanged { get; set; }

    public async Task RegisterTab(TabPane tabPane)
    {
        _tabPanes.Add(tabPane.Id, tabPane);

        if(string.IsNullOrWhiteSpace(ActiveTabId)
            || ActiveTabId == tabPane.Id)
        {
            await SetActiveTab(tabPane);
        }
    }

    public IList<TabPane> GetTabs() => _tabPanes.Select(x => x.Value).ToList();

    public async Task SetActiveTab(TabPane tabPane)
    {
        await tabPane.Show();
        ActiveTabId = tabPane.Id;
        await ActiveTabIdChanged.InvokeAsync(ActiveTabId);
    }

    public async Task SetActiveTabAsync(string tabPaneid) =>
        await SetActiveTab(_tabPanes[ActiveTabId]);

    internal async Task HideActiveTab()
    {
        if(!string.IsNullOrWhiteSpace(ActiveTabId))
        {
            await _tabPanes[ActiveTabId].Hide();
        }

    }
}
