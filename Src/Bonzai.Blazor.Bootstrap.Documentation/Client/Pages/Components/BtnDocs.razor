@using Bonzai.Blazor.Bootstrap.Documentation.Client.Pages.Examples.Btn

@inherits DocsBase

@page "/components/btn"

<ComponentDoc Type="typeof(Btn)">
    <CustomDescription>
        <Row>
            <Column>
                Creates a bootstrap styled button. The default type for the button is button (<code>type="button"</code>)
                Override this by supplying the type attribute.
            </Column>
        </Row>
        <Row>
            <Column>
                <Alert Variance="info"
                       class="d-flex align-items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-info-circle flex-shrink-0 me-2" viewBox="0 0 16 16">
                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                        <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z" />
                    </svg>
                    <div>
                        There is also a <code><a href="btn-link">BtnLink</a></code> component. The main difference between this component and the
                        <code><a href="/components/btn-link">BtnLink</a></code> component is that this component renders a <code>&lt;button&gt;</code> element, and the
                        <code><a href="/components/btn-link">BtnLink</a></code> component renders an <code>&lt;a&gt;</code> (anchor) element.
                    </div>
                </Alert>
            </Column>
        </Row>
    </CustomDescription>
    <Properties>
        <ChildContent />
        <AdditionalAttributes />
        <ParamDescription Property="typeof(Btn).GetProperty(nameof(Btn.OnClick))">
            The action to execute when the button is clicked.
        </ParamDescription>
        <ParamDescription Property="typeof(Btn).GetProperty(nameof(Btn.Size))">
            Specify a size for the button. Bootstrap defines 'lg' and 'sm' variants.
        </ParamDescription>
        <ContextualVariance />
    </Properties>
</ComponentDoc>

<Example ExampleNumber="ExampleNumber">
    <Description>
        <Row>
            <Column>
                Specify any of the standard bootstrap contextual variations. Bootstrap also provides additional "outline" variations.
            </Column>
        </Row>
        <Row>
            <Column>
                <strong>Standard</strong>
                @string.Join(", ", BootstrapVariations.ContextualVariations)
            </Column>
        </Row>
        <Row>
            <Column>
                <strong>Outline</strong>
                @string.Join(", ", BootstrapVariations.ContextualVariations.Select(x => $"outline-{x}"))
            </Column>
        </Row>
        <Row>
            <Column>
                <strong>Link</strong>
                link
            </Column>
        </Row>
    </Description>
    <LiveExample>
        <Variations />
    </LiveExample>
    <Code>
        @(@"<Row class=""flex-wrap justify-content-between"">
    @foreach(var variation in BootstrapVariations.ContextualVariations)
    {
        <Column class=""mb-2"">
            <Btn Variance=""@variation"">@variation</Btn>
        </Column>
    }
</Row>
<Row class=""flex-wrap justify-content-between"">
    @foreach(var variation in BootstrapVariations.ContextualVariations)
    {
        <Column class=""mb-2"">
            <Btn Variance=""@($""outline-{variation}"")"">Outline @variation</Btn>
        </Column>
    }
</Row>
<Row>
    <Column class=""mb-2"">
        <Btn Variance=""link"">Link</Btn>
    </Column>
</Row>")</Code>
</Example>

<Example ExampleNumber="ExampleNumber">
    <Description>
        Specify one of the size variations using the <PropertyReference Name="@nameof(Btn.Size)" /> property.
    </Description>
    <LiveExample>
        <Size />
    </LiveExample>
    <Code>
        @(@"<Row>
    <Column>
        <Btn Size=""sm"">Small</Btn>
        <Btn Size=""lg"">large</Btn>
    </Column>
</Row>")
    </Code>
</Example>

<Example ExampleNumber="ExampleNumber">
    <Description>
        Respond to click events.
    </Description>
    <LiveExample>
        <Click />
    </LiveExample>
    <Code>
        @(@"<Row class=""mb-2"">
    <Column>
        <Btn OnClick=""DoSomething"">Do Something</Btn>
    </Column>
</Row>
@if(ShowContent)
{
    <Row>
        <Column>
            You did something.
        </Column>
    </Row>
}

@code {
    private bool ShowContent { get; set; }

    private void DoSomething()
    {
        ShowContent = !ShowContent;
    }
}
")
    </Code>
</Example>

@code {

}
