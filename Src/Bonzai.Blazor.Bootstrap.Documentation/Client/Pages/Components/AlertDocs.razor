@using Bonzai.Blazor.Bootstrap.Documentation.Client.Pages.Examples.Alert

@page "/components/alert"

<ComponentDoc Type="typeof(Alert)"
              Description="Provides contextual feedback for typical user actions">
    <Properties>
        <ParameterDescription Name="@nameof(Alert.ChildContent)"
                              Type="@typeof(RenderFragment)">
            The content to be rendered in this alert.
        </ParameterDescription>
        <ParameterDescription Name="@nameof(Alert.Dismissible)"
                              Type="@typeof(bool)">
            Makes the alert dismissible by displaying a dismiss button in the top right corner of the alert.
        </ParameterDescription>
        <ParameterDescription Name="@nameof(Alert.FadeOut)"
                              Type="@typeof(bool)">
            Causes the alert to use a fade out animation when dismissed.
        </ParameterDescription>
        <ParameterDescription Name="@nameof(Alert.Hidden)"
                              Type="typeof(bool)">
            Hides the alert from display by removing it from the dom.
        </ParameterDescription>
        <ParameterDescription Name="@nameof(Alert.HiddenChanged)"
                              Type="typeof(EventCallback<bool>)">
            Callback to be executed when the value of <PropertyReference Name="@nameof(Alert.Hidden)" /> is changed.
        </ParameterDescription>
        <ContextualVariance />
        <AdditionalAttributes />
    </Properties>
</ComponentDoc>

<Example ExampleNumber="ExampleNumber">
    <Description>
        The different built in variations.
    </Description>
    <LiveExample>
        <Variations />
    </LiveExample>
    <Code>@(@"@foreach(var variation in BootstrapVariations.ContextualVariations)
{
    <Row>
        <Column>
            <Alert Variance=""@variation"">
                This is a ""@variation"" alert.
            </Alert>
        </Column>
    </Row>
}")</Code>
</Example>

<Example ExampleNumber="ExampleNumber">
    <Description>
        Use the <PropertyReference Name="@nameof(Alert.Dismissible)" /> parameter to allow the user to dismiss the alert.
    </Description>
    <LiveExample>
        <Dismissible />
    </LiveExample>
    <Code>@(@"<Alert Dismissible=""true""
       Variance=""primary"">
    You can click the the &times; icon to dismiss this alert.
</Alert>")</Code>
</Example>

<Example ExampleNumber="ExampleNumber">
    <Description>
        Use the <PropertyReference Name="@nameof(Alert.FadeOut)" /> property to cause a fade out animation when the alert is dismissed.
    </Description>
    <LiveExample>
        <FadeOut />
    </LiveExample>
    <Code>
        @(@"<Row>
    <Column>
        <Alert Variance=""primary""
               Dismissible=""true""
               FadeOut=""true"">
            I will have a fade animation when dismissed.
        </Alert>
    </Column>
</Row>
<Row>
    <Column>
        <Alert Variance=""info""
               Dismissible=""true""
               FadeOut=""false"">
            I will <b><i>NOT</i></b> have a fade out animation when dismissed.
        </Alert>
    </Column>
</Row>")
    </Code>
</Example>

<Example ExampleNumber="ExampleNumber">
    <Description>
        You can bind to the <PropertyReference Name="@nameof(Alert.Hidden)" /> property to control the alert.
    </Description>
    <LiveExample>
        <BindHidden />
    </LiveExample>
    <Code>
        @(@"<Row class=""mb-2"">
    <Column>
        <Button onclick=""ToggleAlert"">@ButtonText Alert </Button>
    </Column>
</Row>
<Row>
    <Column>
        <Alert @bind-Hidden=""Hidden""
               Variance=""primary"">Use the button to toggle me.</Alert>
    </Column>
</Row>
<Row class=""mb-2"">
    <Column>
        <Button onclick=""ToggleAlert2"">@ButtonText2 Alert </Button>
    </Column>
</Row>
<Row>
    <Column>
        <Alert @bind-Hidden=""Hidden2""
               FadeOut=""true""
               Variance=""primary"">Use the button to toggle me with animation.</Alert>
    </Column>
</Row>

@code {
    private bool Hidden { get; set; } = false;

    private bool Hidden2 { get; set; } = false;

    private string ButtonText => Hidden
        ? ""Show""
        : ""Hide"";

    private string ButtonText2 => Hidden2
        ? ""Show""
        : ""Hide"";

    private void ToggleAlert() => Hidden = !Hidden;

    private void ToggleAlert2() => Hidden2 = !Hidden2;
}
")
    </Code>
</Example>

@code {
    private int _exampleNumber;

    private int ExampleNumber
    {
        get
        {
            return ++_exampleNumber;
        }
    }
}
