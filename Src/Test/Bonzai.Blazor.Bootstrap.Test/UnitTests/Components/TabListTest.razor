@inherits TestBase<TabList>

@code {
    [Fact]
    public void RendersListWithTabClasses()
    {
        var cut = RenderComponent(@<TabList></TabList>);

        var list = FindList(cut);
        AssertHasTabClasses(list);
    }

    [Fact]
    public void ClassAttributeAppendedToClassList()
    {
        const string ExpectedClassName = "unit-test";
        var cut = RenderComponent(@<TabList class="@ExpectedClassName"></TabList>);

        var list = FindList(cut);
        AssertHasTabClasses(list);
        Assert.Contains(ExpectedClassName, list.ClassList);
    }

    [Fact]
    public void AdditionalAttributesRenderedOnList()
    {
        var cut = RenderComponent(@<TabList data-unit-test="custom value"></TabList>);

        var list = FindList(cut);
        Assert.NotNull(list.GetAttribute("data-unit-test"));
    }

    [Fact]
    public void ChildContentIsRenderedInList()
    {
        const string ExpectedContent = "unit test";
        var cut = RenderComponent(@<TabList>@ExpectedContent</TabList>);

        var list = FindList(cut);
        Assert.Equal(ExpectedContent, list.TextContent);
    }

    [Fact]
    public void RoleIsNotSet_RoleisSetToTabList()
    {
        var cut = RenderComponent(@<TabList></TabList>);

        var list = FindList(cut);
        Assert.Equal("tablist", list.GetAttribute("role"));
    }

    [Fact]
    public void RoleIsSet_RoleIsNotOverridden()
    {
        const string ExpectedRole = "unittest";
        var cut = RenderComponent(@<TabList role="@ExpectedRole"></TabList>);

        var list = FindList(cut);
        Assert.Equal(ExpectedRole, list.GetAttribute("role"));
    }

    [Fact]
    public void PillsIsTrue_UsesPillClass()
    {
        var cut = RenderComponent(@<TabList Pills="true"></TabList>);

        var list = FindList(cut);
        Assert.Contains("nav", list.ClassList);
        Assert.Contains("nav-pills", list.ClassList);
    }

    private void AssertHasTabClasses(IElement list)
    {
        Assert.Contains("nav", list.ClassList);
        Assert.Contains("nav-tabs", list.ClassList);
    }

    private IElement FindList(IRenderedComponent<TabList> cut) =>
        cut.Find("ul");
}
